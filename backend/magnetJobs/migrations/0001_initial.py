# Generated by Django 5.1 on 2024-09-26 05:12

import django.db.models.deletion
import django.utils.timezone
import magnetJobs.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('expires_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to=magnetJobs.models.user_directory_path)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('comments', models.ManyToManyField(blank=True, related_name='commented_posts', to='magnetJobs.comment')),
                ('linked_notifications', models.ManyToManyField(blank=True, related_name='linked_posts', to='magnetJobs.notification')),
            ],
        ),
        migrations.AddField(
            model_name='notification',
            name='post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications_linked', to='magnetJobs.post'),
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='posts/attachments')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_attachments', to='magnetJobs.post')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='magnetJobs.post')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_comments', to='magnetJobs.post'),
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='magnetJobs.post')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('username', models.CharField(db_index=True, default='unkwown', max_length=50, unique=True)),
                ('display_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=254, null=True, unique=True)),
                ('password_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('google_id', models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('employed', models.BooleanField(default=False)),
                ('avatar_image', models.ImageField(blank=True, null=True, upload_to=magnetJobs.models.user_directory_path)),
                ('following', models.ManyToManyField(blank=True, related_name='followers', to='magnetJobs.users')),
                ('issued_notifications', models.ManyToManyField(blank=True, related_name='notifications_issued', to='magnetJobs.notification')),
                ('received_notifications', models.ManyToManyField(blank=True, related_name='notifications_received', to='magnetJobs.notification')),
                ('sessions', models.ManyToManyField(blank=True, related_name='user_sessions', to='magnetJobs.session')),
            ],
        ),
        migrations.AddField(
            model_name='session',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='magnetJobs.users'),
        ),
        migrations.AddField(
            model_name='post',
            name='bookmarks',
            field=models.ManyToManyField(blank=True, related_name='bookmarked_posts', through='magnetJobs.Bookmark', to='magnetJobs.users'),
        ),
        migrations.AddField(
            model_name='post',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='liked_posts', through='magnetJobs.Like', to='magnetJobs.users'),
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='magnetJobs.users'),
        ),
        migrations.AddField(
            model_name='notification',
            name='issuer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_issued', to='magnetJobs.users'),
        ),
        migrations.AddField(
            model_name='notification',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_sent', to='magnetJobs.users'),
        ),
        migrations.AddField(
            model_name='like',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='magnetJobs.users'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='magnetJobs.users'),
        ),
        migrations.AddField(
            model_name='bookmark',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='magnetJobs.users'),
        ),
    ]
